{"version":3,"file":"static/js/38.8b31627c.chunk.js","mappings":"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","sources":["pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\n// import { postData } from \"../apis/loginapi\";\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate =useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (!email || !password) {\n      setError('Please fill in all fields.');\n      return;\n    }\n\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      setError('Invalid email format.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:8000/common/login/',{email,password});\n      console.log(\"Login Successful:\", response.data);\n      alert('Login Successful');\n      navigate('/');\n    }\n    catch (error) {\n      console.error(\"Login Failed: \", error);\n      alert('Login Failed');\n\n    }\n    setEmail('');\n    setPassword('');\n\n  };\n  return (\n    <div style={styles.container}>\n      <h2 style={styles.title}>Login</h2>\n      <form onSubmit={handleSubmit} style={styles.form}>\n        <div style={styles.inputContainer}>\n          <label htmlFor=\"email\" style={styles.label}>Email:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            style={styles.input}\n            placeholder=\"Enter your email\"\n          />\n        </div>\n        <div style={styles.inputContainer}>\n          <label htmlFor=\"password\" style={styles.label}>Password:</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            style={styles.input}\n            placeholder=\"Enter your password\"\n          />\n        </div>\n        {error && <p style={styles.error}>{error}</p>}\n        <button type=\"submit\" style={styles.button}>Login</button>\n\n        <a href=\"/signup\">Create New account ?</a>\n      </form>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    width: '100%',\n    maxWidth: '400px',\n    margin: '0 auto',\n    padding: '20px',\n    textAlign: 'center',\n    boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\n    borderRadius: '8px',\n  },\n  title: {\n    fontSize: '24px',\n    marginBottom: '20px',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  inputContainer: {\n    marginBottom: '15px',\n    textAlign: 'left',\n  },\n  label: {\n    display: 'block',\n    marginBottom: '5px',\n    fontSize: '14px',\n    fontWeight: 'bold',\n  },\n  input: {\n    width: '100%',\n    padding: '10px',\n    fontSize: '16px',\n    border: '1px solid #ccc',\n    borderRadius: '4px',\n  },\n  button: {\n    padding: '10px 20px',\n    fontSize: '16px',\n    color: '#fff',\n    backgroundColor: '#007bff',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n  },\n  error: {\n    color: 'red',\n    fontSize: '14px',\n    marginBottom: '10px',\n  },\n};\n\nexport default Login;\n"],"names":["styles","container","width","maxWidth","margin","padding","textAlign","boxShadow","borderRadius","title","fontSize","marginBottom","form","display","flexDirection","inputContainer","label","fontWeight","input","border","button","color","backgroundColor","cursor","error","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","setError","navigate","useNavigate","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","response","wrap","_context","prev","next","preventDefault","abrupt","test","axios","sent","console","log","data","alert","t0","stop","_x","apply","arguments","_jsxs","style","children","_jsx","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","href"],"sourceRoot":""}